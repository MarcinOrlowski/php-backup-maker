;
; Default config file for PDM script.
; 
; INSTALLATION: Rename to 'pdm.ini' and put into ~/.pdm/
;               directory
;
; Author: Marcin Orlowski <carlos@wfmh.org.pl>
;
; Project home: https://bitbucket.org/borszczuk/php-backup-maker/
;
[CONFIG]
; version of the config file [v2.1+]
; the version value is calculated as follow: version*10+revision, so
; i.e. 21 menans version 2, revision 1. So if I incorporate any new
; features, I'll update this value and due to this, I'll be able to
; detect and inform you about new features you can configure. 
; NOTE: however you can put a BIG number here to quiet version notifier
; forever, I suggest not to do so. Just leave this as in pdm.config.orig
version = 23

;
; PDM - general settings...
;
[PDM]

; media - media type [v2.2+]
; all files will be placed in sets containing of max. capacity MB of data
; depending of media type. Use help-media to list all supported types
media = 8500

; ignore_file [v2.1+]
; This is ignore marker. Ignore marker is a file that tells PDM to skip
; the directory it resides in from being processed. See also 'ignore_subdirs'
; Defult file name is '.pdm_ignore'
ignore_file = .pdm_ignore

; ignore_subdirs [v2.1+]
; by default, PDM ignores also subdirectories of folder where ignore_file
; had been found. if you want to avoid this, set this to Off - in that
; case, only content of the directory will be forgotten. Subdirs (if any)
; will be kept
ignore_subdirs = On

; check_files_readability [v2.2]+
; by default, PDM will do additional checks to make sure each file can
; be read by the user it runs as. This slows thinks down a bit, but
; prevents you from facing mkisofs abort later on (say, in the middle of
; 6rd CD burning).
; ADVICE: do not turn it off for ordinary users. The only non-risky case
;         is when running PDM as root, so PDM will automatically turn
;         this off when launched as root.
check_files_readability = On

; line_feed [v5.1.0]
; defines type of line feed code used for all generated text files.
; See help-line-feed option to see all supported types
line_feed = "crlf"

; no_stamps [v5.2.0]
; prevents PDM from writting any date stamps into generated files (index,
; volume markers etc). It's enabled by default. Does not affect "prefix"
; switch
no_stamps = Off

;
; CDRECORD
;
; here we gonna set up some values for 'cdrecord' tool, to make CD burning
; possible. Make sure you got it all right!
;
; Please note that if you don't plan to burn nor produce ISO images, you
; can ignore most of these settings. Check NOTEs below for more details
; about what to keep eye on mostly.
;
[CDRECORD]

; device [v2.0+]
; use "cdrecord -scanbus" to find out your device settings and put the result
; (i.e. for 1st CD writer it will be something like "x,0,0")
; NOTE: don't put any /dev/xxxx here. CD-Record needs what's above.
; device 1,0,0 means master unit on 2nd IDE device (probably your case too)
device = "1,0,0"

; fifo_size [v2.0+]
; how many MB per fifo size (important when burning on the fly. If you got
; many small files to burn, You may consider increasing this value if RAM
; permits, however default 10MB should be fine for most uses
;
; FIFO queue is used when you burn on-the-fly. It's memory buffer used
; to communicate between mkisofs that creates CD structures and cdrecord
; that burns your data. If it's too small, cdrecord may burn faster than
; mkisofs is able to deliver the data (this mostly happens if you burn
; thousands of millions small files on-the-fly). Unless you use
; burn-proof device, you get "Buffer underrun" if this happen, and in
; result broken CD. By default, 10MB is used, which shall be fine for
; 99,9% of uses. Most probably you won't ever need to touch this.
fifo_size = 10

;
; GROWISOFS
; Please note that if you don't plan to burn DVDs on-the-fly, you can 
; ignore most of these settings.
;
[GROWISOFS]

; device [v4.0+]
; growisofs needs to know where's your DVD burned. Show him using this option
; Default points to /dev/dvd
; NOTE: growisofs uses STANDARD device naming scheme (i.e. /dev/dvd, /dev/xxx).
device = "/dev/dvd"


[MKISOFS]
; nothing at the moment

[SPLIT]
; buffer_size [v3.0+]
; Size, *always* in MB of internal splitting buffer. See README for more
; information about splitting feature and internal buffer management
; Default value is 0 (zero) which means PDM will automaticaly take care
; of computing buffer_size
;
; PDM is able to split files exceeding media capacity into smaller
; chunks to fit the media (and only such - read NOTES). For some reasons
; memory management model or its limits to be exact. PDM deals with this
; as follow. If buffer_size is set to 0 or is not specified, we take 1/3rd
; part of chunk size or php.ini/memory_limit value, picking the smaller
; value. For example, we got 200MB file to split into 100MB chunks and
; current memory limit is set to 30MB, PDM will use 10MB for splitting
; buffer (1/3rd of 30MB). This slows us a bit as we have to do 10
; reads/writes per chunk, but prevents against memory exhausting
; problem. Alternate approach is to specify buffer_size manually. Write
; how many MB you want PDM to *always* use (ie. to set it up to 22MB,
; set buffer_size = 22). If you got memory_limit set high enough (i.e
; 200MB) 4th part of it is only 50MB. However PDM is memory hungry tool
; sometimes, it safely deals with 50000 files even with 64MB
; memory_limit. If you do not backup zillions of files, specifying
; buffer_size = 100 looks quite safe in this example.
;
; NOTE: splitting is NOT used for files smaller than
;       media capacity. This means PDM does NOT optimise
;       media usage by using each byte of its capacity.
;
; If you rarely need splitting (I recommend using just bigger capacity
; storage - i.e. DVDs instead of CDs or double layer vs single layer etc),
; you can leave default settings.
buffer_size = 0

